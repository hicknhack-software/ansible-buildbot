---
- include: store_passwd.yml

## note: create VM with bionic instead!
# - name: upgrade to 18.04
#   apt:
#     update_cache: yes
#     upgrade: dist
#     autoremove: yes
#   when: ansible_distribution_major_version < 18
#   register: dist_upgrade
# - name: Reboot vm
#   reboot:
#     connect_timeout: "5"
#     post_reboot_delay: "15"
#     reboot_timeout: "600"
#   when: dist_upgrade.changed

# - name: do facts module to get latest information
#   setup: {}
#   when: dist_upgrade.changed

- name: install APT packages
  apt:
    name: "{{ buildbot_worker_apt_packages }}"
    state: latest
    update_cache: yes
    cache_valid_time: 86400

- name: update PIP/Setuptools
  pip:
    name:
      - pip # < 21 for 16.04
      - setuptools # buildbot fails otherwise, < 51 for 16.04
    state: latest
    executable: pip3

- name: Install PIP packages
  pip:
    name: '{{ buildbot_worker_pip_packages }}'
    executable: pip3

- name: Install PIP buildbot worker
  pip:
    name: "buildbot-worker"
    version: "{{ buildbot_version }}"
    executable: pip3

- name: User
  user:
    name: '{{ buildbot_worker_user }}'
    comment: 'Dedicated user to run the buildbot worker'
    shell: '/bin/bash'

- name: Folder
  file:
    path: '{{ item }}'
    state: directory
    owner: '{{ buildbot_worker_user }}'
    group: '{{ buildbot_worker_user }}'
  with_items:
  - '{{ buildbot_worker_basedir }}'
  - '{{ buildbot_worker_prepare_dir }}'
  - '{{ buildbot_worker_utilities_dir }}'

- name: Create Utilities
  copy:
    src: 'utilities/'
    dest: '{{ buildbot_worker_utilities_dir }}'
    owner: '{{ buildbot_worker_user }}'
    group: '{{ buildbot_worker_user }}'

- name: Create
  command: >
    buildbot-worker create-worker {{ buildbot_worker_basedir }}
    {{ buildbot_worker_master_host }}:{{ buildbot_worker_master_port }}
    {{ buildbot_worker_name }} {{ generated_worker_password }}
  become: true
  become_user: '{{ buildbot_worker_user }}'
  args:
    creates: '{{ buildbot_worker_basedir }}/buildbot.tac'
  notify:
  - restart buildbot worker

- name: SystemD Unit File
  template:
    src: buildbot-worker.service.j2
    dest: /etc/systemd/system/buildbot-worker.service

- name: Admin
  file:
    content: '{{ buildbot_worker_admin }}'
    dest: '{{ buildbot_worker_basedir }}/info/admin'

- name: Description
  file:
    content: "{{ buildbot_worker_description }}"
    dest: '{{ buildbot_worker_basedir }}/info/host'


- name: Export Facts
  set_fact:
    buildbot_master_host: '{{ buildbot_master_host }}'
    buildbot_worker_name: '{{ buildbot_worker_name }}'
    buildbot_worker_user: '{{ buildbot_worker_user }}'
    buildbot_worker_shell: '{{ buildbot_worker_shell }}'
    buildbot_worker_basedir: '{{ buildbot_worker_basedir }}'
    buildbot_worker_prepare_dir: '{{ buildbot_worker_prepare_dir }}'
    buildbot_worker_utilities_dir: '{{ buildbot_worker_utilities_dir }}'
    buildbot_worker_platforms: '{{ buildbot_worker_platforms }}'
    buildbot_worker_setups: []
  tags: [always]
